// Generated by Haxe 3.3.0
(function () { "use strict";
var HxOverrides = function() { };
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
var Main = function() { };
Main.main = function() {
	console.log("main()");
	console.log("main()");
	console.log("main()");
	console.log("main()");
	console.log("NewClass.x: " + package01.package02.NewClassSurrogate.x);
	var fields = Type.getClassFields(package01.package02.NewClassSurrogate);
	var _g = 0;
	while(_g < fields.length) {
		var field = fields[_g];
		++_g;
		console.log(field);
	}
};
var Reflect = function() { };
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Type = function() { };
Type.getClassFields = function(c) {
	var a = Reflect.fields(c);
	HxOverrides.remove(a,"__name__");
	HxOverrides.remove(a,"__interfaces__");
	HxOverrides.remove(a,"__properties__");
	HxOverrides.remove(a,"__super__");
	HxOverrides.remove(a,"__meta__");
	HxOverrides.remove(a,"prototype");
	return a;
};
var package01_package02_AnotherClass = function() { };
package01_package02_AnotherClass.traceSomething = function() {
	console.log("Something...");
};
var package01_package02_NewClassSurrogate = function() { };
package01_package02_NewClassSurrogate.callSomething = function() {
	package01_package02_AnotherClass.traceSomething();
};
package01_package02_NewClassSurrogate.x = "Great!";
Main.main();
})();

//# sourceMappingURL=main-javascript.js.map